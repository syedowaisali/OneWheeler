//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using Assets.Scripts.Base;
using Assets.Scripts.Managers;
using Assets.Scripts.Misc;

namespace Assets.Scripts.States.Dust{
	
	public class DustLevel6 : DustPlay{

		public DustLevel6 (StateManager sm) : base(sm) {

		}

		public override void Init (){
			base.Init ();

			// set next state
			manager.SetState (new DustLevel6 (manager));

			if (! SceneManager.IsSceneLoaded (SceneManager.Dust.LEVEL6)) {
				SceneManager.LoadScene (SceneManager.Dust.LEVEL6);
			}
		}

		public override void FinishLevel (){
			base.FinishLevel ();
			
			// set next level unlock
			unlockNextLevel = "dustlevel6lock";
		}

		public override void SetNextState (){
			base.SetNextState ();

			// set next state
			manager.SetState (new DustLevel7 (manager));
		}

		public override void TriggerEnter2D (Collider2D collider, GameObject sender){
			base.TriggerEnter2D (collider, sender);

			if (collider.transform.tag.Equals (Tags.THORN)) {
				collider.GetComponent<Rigidbody2D> ().isKinematic = false;
			}

		}

		public override void DetectCollision2D (Collision2D collider, GameObject sender){
			base.DetectCollision2D (collider, sender);

			if (collider.transform.tag == Tags.DIE_BLOCK && sender.tag == Tags.THORN) {
				if (StorageManager.IsSoundOn ()){
					sender.GetComponent<AudioSource> ().Play ();
				}
			}
		}

		public override void Restart (){
			base.Restart ();

			float x = 10.65f;
			float inc = 4f;
			foreach (GameObject thorn in GameObject.FindGameObjectsWithTag(Tags.THORN)) {
				thorn.GetComponent<Rigidbody2D> ().isKinematic = true;
				thorn.transform.localPosition = new Vector3 (x, 0f, 5.240993f);
				thorn.transform.localRotation = Quaternion.Euler(270f, 90f, 0f);
				x += inc;
			}
		}
	}
}

