//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using Assets.Scripts.Base;
using Assets.Scripts.Managers;
using Assets.Scripts.Misc;

namespace Assets.Scripts.States
{
	public class LostState : StateBase{

		private GameObject playAgain;
		private GameObject backToMenu;
		private GameObject pause;

		public LostState (StateManager sm) : base(sm){

		}

		public override void Init (){
			base.Init ();

			playAgain = GameObject.Find (GameCenter.PLAY_AGAIN);
			backToMenu = GameObject.Find (GameCenter.BACK_TO_MENU);
			pause = GameObject.Find (GameCenter.PAUSE);

			// hide control buttons
			//GameObject.Find (GameCenter.LEFT_CONTROL).GetComponent<SpriteRenderer> ().enabled = false;
			GameObject.Find (GameCenter.LEFT_CONTROL).GetComponent<Animator> ().SetBool ("Start", true);
			GameObject.Find (GameCenter.RIGHT_CONTROL).GetComponent<Animator> ().SetBool ("Start", true);
			//GameObject.Find (GameCenter.RIGHT_CONTROL).GetComponent<SpriteRenderer> ().enabled = false;

			// hide pause button
			HidePauseButton ();

			// show play again and menu button
			ShowPlayAgainAndMenuButton ();

			// remove cycle target from camera
			manager.mainCamera.GetComponent<SmoothCamera2D> ().target = null;

			// initantiate replay button to center for camera
			//GameObject replay = manager.BuildObject (manager.gameData.replay);

			// ignore collisions
			//Physics2D.IgnoreCollision (replay.GetComponent<CircleCollider2D> (), GameObject.FindWithTag (Tags.CYCLE).GetComponent<CircleCollider2D> ());
			//Physics2D.IgnoreCollision (replay.GetComponent<CircleCollider2D> (), GameObject.Find (GameCenter.PIPE).GetComponent<BoxCollider2D> ());

			// re-position to replay button
			//replay.transform.position = new Vector3 (manager.mainCamera.transform.position.x, manager.mainCamera.transform.position.y, -1f);
		}

		public override void MouseDown (GameObject gameObj){
			base.MouseDown (gameObj);
			if (gameObj.name.Equals (GameCenter.PLAY_AGAIN)) {
				manager.SwitchState (new PlayState (manager));
				SceneManager.ReloadScene ();
			} else if(gameObj.name.Equals(GameCenter.BACK_TO_MENU)) {
				manager.SwitchState(new BeginState (manager));
			}
		}

		private void HidePauseButton (){
			pause.GetComponent<Animator> ().SetBool ("Start", true);
		}

		private void ShowPlayAgainAndMenuButton (){

			playAgain.GetComponent<Animator> ().SetBool ("Start", true);
			backToMenu.GetComponent<Animator> ().SetBool ("Start", true);

			/*
			playAgain.transform.position = new Vector3 (
				playAgain.transform.position.x - 0.8f,
				playAgain.transform.position.y,
				playAgain.transform.position.z
				);

			playAgain.GetComponent<SpriteRenderer> ().enabled = true;
			playAgain.GetComponent<CircleCollider2D> ().enabled = true;

			backToMenu.GetComponent<SpriteRenderer> ().enabled = true;
			backToMenu.GetComponent<CircleCollider2D> ().enabled = true;
			*/
		}
	}
}

