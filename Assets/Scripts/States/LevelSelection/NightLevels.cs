//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using Assets.Scripts.Base;
using Assets.Scripts.Managers;
using Assets.Scripts.Misc;
using Assets.Scripts.States.Dust;
using Assets.Scripts.States.Night;

namespace Assets.Scripts.States{

	public class NightLevels : LevelSelection{

		public NightLevels (StateManager sm) : base(sm){

		}

		public override void Init (){
			base.Init ();

			// set current level selection
			currentSelection = NIGHT;

			if (! SceneManager.IsSceneLoaded (SceneManager.LevelSelection.NIGHT)) {
				SceneManager.LoadScene(SceneManager.LevelSelection.NIGHT);
			}
		}

		public override void MouseDown (GameObject gameObj){
			base.MouseDown (gameObj);

			// check level 1 is unlock
			if (gameObj.name.Equals (GameCenter.Levels.LEVEL0)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level0lock")){
					manager.SetState(new NightLevel1 (manager));
					ChangeState ();
				}
			}

			// check level 2 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL1)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level1lock")){
					manager.SetState(new NightLevel2 (manager));
					ChangeState ();
				}
			}

			// check level 3 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL2)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level2lock")){
					manager.SetState(new DustLevel3 (manager));
					ChangeState ();
				}
			}

			// check level 4 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL3)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level3lock")){
					manager.SetState(new DustLevel4 (manager));
					ChangeState ();
				}
			}

			// check level 5 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL4)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level4lock")){
					manager.SetState(new DustLevel5 (manager));
					ChangeState ();
				}
			}

			// check level 6 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL5)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level5lock")){
					manager.SetState(new DustLevel6 (manager));
					ChangeState ();
				}
			}

			// check level 7 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL6)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level6lock")){
					manager.SetState(new DustLevel7 (manager));
					ChangeState ();
				}
			}

			// check level 8 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL7)) {
				if (! StorageManager.IsLevelLocked (currentSelection + "level7lock")){
					manager.SetState(new DustLevel8 (manager));
					ChangeState ();
				}
			}

			// check level 9 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL8)) {
				if (! StorageManager.IsLevelLocked (DUST + "level8lock")){
					manager.SetState(new DustLevel9 (manager));
					ChangeState ();
				}
			}

			// check level 10 is unlock
			else if (gameObj.name.Equals (GameCenter.Levels.LEVEL9)) {
				if (! StorageManager.IsLevelLocked (DUST + "level9lock")){
					manager.SetState(new DustLevel10 (manager));
					ChangeState ();
				}
			}
		}
	}
}

